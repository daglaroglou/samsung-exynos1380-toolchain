name: Create Toolchain Release Package

on:
  workflow_dispatch:  # Manual triggering only
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
        default: 'latest'

jobs:
  create-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true
        fetch-depth: 0
    
    - name: Checkout LFS objects
      run: git lfs checkout
    
    - name: Create toolchain package
      run: |
        # Set fixed package name
        PACKAGE_NAME="toolchain"
        
        echo "Creating package: toolchain.tar.gz"
        
        # Create temporary directory for packaging
        mkdir -p "/tmp/${PACKAGE_NAME}"
        
        # Copy repository contents excluding unwanted files
        rsync -av \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='.gitattributes' \
          --exclude='README.md' \
          --exclude='*.md' \
          ./ "/tmp/${PACKAGE_NAME}/"
        
        # Create the tar.gz package with fixed name
        cd /tmp
        tar -czf "toolchain.tar.gz" "${PACKAGE_NAME}/"
        
        # Move package to workspace
        mv "toolchain.tar.gz" "${GITHUB_WORKSPACE}/"
        
        # Store package name for later steps
        echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV
        echo "PACKAGE_FILE=toolchain.tar.gz" >> $GITHUB_ENV
    
    - name: Calculate package info
      run: |
        PACKAGE_SIZE=$(du -h "${PACKAGE_FILE}" | cut -f1)
        PACKAGE_SIZE_BYTES=$(stat -f%z "${PACKAGE_FILE}" 2>/dev/null || stat -c%s "${PACKAGE_FILE}")
        echo "Package size: ${PACKAGE_SIZE} (${PACKAGE_SIZE_BYTES} bytes)"
        echo "PACKAGE_SIZE=${PACKAGE_SIZE}" >> $GITHUB_ENV
        echo "PACKAGE_SIZE_BYTES=${PACKAGE_SIZE_BYTES}" >> $GITHUB_ENV
    
    - name: Determine release details
      run: |
        # Use the input tag name from manual dispatch
        TAG_NAME="${{ github.event.inputs.tag_name }}"
        RELEASE_NAME="OSRC"
        
        # Never mark as prerelease
        PRERELEASE="false"
        
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV
        echo "PRERELEASE=${PRERELEASE}" >> $GITHUB_ENV
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: ${{ env.RELEASE_NAME }}
        body: |
          This release contains the complete Samsung Exynos1380 development toolchain.
          
          ## Package Contents
          - Clang compiler toolchain (clang-r450784d)
          - GCC cross-compiler (x86_64-linux-glibc2.17-4.8)
          - Android build tools and utilities
          - Kernel build tools
          - System libraries and headers
          
          ## Package Information
          - **File**: `toolchain.tar.gz`
          - **Size**: ${{ env.PACKAGE_SIZE }}
          - **Architecture**: x86_64 Linux
          - **Created**: Manually triggered
          
          ## Installation
          ```bash
          # Extract the toolchain
          tar -xzf toolchain.tar.gz
          
          # Add to PATH (example)
          export PATH="$PWD/toolchain/clang/host/linux-x86/clang-r450784d/bin:$PATH"
          export PATH="$PWD/toolchain/prebuilts/build-tools/linux-x86/bin:$PATH"
          ```
          
          ## Verification
          ```bash
          # Verify clang installation
          clang --version
          
          # Verify build tools
          ninja --version
          make --version
          ```
          
          ---
          *Generated on ${{ github.run_id }} â€¢ Commit: ${{ github.sha }}*
        files: toolchain.tar.gz
        draft: false
        prerelease: false
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Summary
      run: |
        echo "## ðŸ“¦ Toolchain Release Created" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Package Name**: \`toolchain\`" >> $GITHUB_STEP_SUMMARY
        echo "- **File**: \`toolchain.tar.gz\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Size**: ${{ env.PACKAGE_SIZE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: \`${{ env.TAG_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Name**: \`OSRC\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Type**: Release" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: Manual workflow dispatch" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸŽ‰ **Release created successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“¥ **Download**: [Release Page](https://github.com/${{ github.repository }}/releases/tag/${{ env.TAG_NAME }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The toolchain package is now available as a permanent release and can be downloaded from the Releases page." >> $GITHUB_STEP_SUMMARY
